pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
fov=64
road={
	idx=0,
	finish=128,
	grav=0.1625
}

course={}

ship={
	x=0,
	y=32,
	z=0,
	vx=0,
	vy=0,
	vz=0,
	floor=32,
	onground=true,
	ftimer=0,
	jhtimer=0,
	
	sensor_f=0,
	sensor_l=0,
	sensor_r=0,
	sensor_b=0,
	
	aabb_min={x=-7,y=-5,z=-4},
	aabb_max={x=7,y=0,z=4}
}

cam={x=0.0,y=0.0,z=0.0}

star_c=64
star_f=2
star_t=0
stars={}

-- p01 trifill
function p01_trapeze_h(l,r,lt,rt,y0,y1)
 lt,rt=(lt-l)/(y1-y0),(rt-r)/(y1-y0)
 if(y0<0)l,r,y0=l-y0*lt,r-y0*rt,0
 y1=min(y1,128)
 for y0=y0,y1 do
  rectfill(l,y0,r,y0)
  l+=lt
  r+=rt
 end
end
function p01_trapeze_w(t,b,tt,bt,x0,x1)
 tt,bt=(tt-t)/(x1-x0),(bt-b)/(x1-x0)
 if(x0<0)t,b,x0=t-x0*tt,b-x0*bt,0
 x1=min(x1,128)
 for x0=x0,x1 do
  rectfill(x0,t,x0,b)
  t+=tt
  b+=bt
 end
end
function p01_trifill(x0,y0,x1,y1,x2,y2,col)
 color(col)
 if(y1<y0)x0,x1,y0,y1=x1,x0,y1,y0
 if(y2<y0)x0,x2,y0,y2=x2,x0,y2,y0
 if(y2<y1)x1,x2,y1,y2=x2,x1,y2,y1
 if max(x2,max(x1,x0))-min(x2,min(x1,x0)) > y2-y0 then
  col=x0+(x2-x0)/(y2-y0)*(y1-y0)
  p01_trapeze_h(x0,x0,x1,col,y0,y1)
  p01_trapeze_h(x1,col,x2,x2,y1,y2)
 else
  if(x1<x0)x0,x1,y0,y1=x1,x0,y1,y0
  if(x2<x0)x0,x2,y0,y2=x2,x0,y2,y0
  if(x2<x1)x1,x2,y1,y2=x2,x1,y2,y1
  col=y0+(y2-y0)/(x2-x0)*(x1-x0)
  p01_trapeze_w(y0,y0,y1,col,x0,x1)
  p01_trapeze_w(y1,col,y2,y2,x1,x2)
 end
end

-- helper
function step(from,to,d)
	d = abs(d)
	local res = from
	
	if from == to then
		res = from
	elseif from < to then
		res = min(from + d, to)
	elseif from > to then
		res = max(from - d, to)
	end
		
	return res
end

function vec3(x,y,z)
 return {x=x, y=y, z=z}
end

function project3(p)
	local scr2 = {x=0, y=0}
	p.x = p.x - cam.x
	p.y = p.y - cam.y
	p.z = p.z - cam.z	
	local pers = fov / max(1.0, fov + p.z)
	scr2.x = (p.x * pers) + 64
	scr2.y = (p.y * pers) + 64
 return scr2 
end

shades={5,13,6,7}
ibuf={
	3,4,7, 7,8,4, -- bottom
	1,5,8, 8,4,1, -- left
	2,6,7, 7,3,2, -- right
	1,2,5, 5,6,2, -- top
	1,2,3, 3,4,1  -- back	
}
facec={
	1, 1, -- bottom
	2, 2, -- left
	2, 2, -- right
	4, 4, -- top
	3, 3  -- back
}
function draw_box(pos, sz, lcol, dcol)
	local ntl=vec3(
		pos.x,
		pos.y,
		pos.z)
	local ntr=vec3(
		pos.x + sz.x,
		pos.y,
		pos.z)
	local nbr=vec3(
		pos.x + sz.x,
		pos.y + sz.y,
		pos.z)
	local nbl=vec3(
		pos.x,
		pos.y + sz.y,
		pos.z)
	local ftl=vec3(
		pos.x,
		pos.y,
		pos.z + sz.z)
	local ftr=vec3(
		pos.x + sz.x,
		pos.y,
		pos.z + sz.z)
	local fbr=vec3(
		pos.x + sz.x,
		pos.y + sz.y,
		pos.z + sz.z)
	local fbl=vec3(
		pos.x,
		pos.y + sz.y,
		pos.z + sz.z)
		
	local vbuf={
		ntl, ntr, nbr, nbl,
		ftl, ftr, fbr, fbl
	}
	for i,v in ipairs(vbuf) do
		vbuf[i] = project3(v)
	end
	
	local idx=1
	for face=1,#facec do
		local p1 = vbuf[ibuf[idx]]
		local p2 = vbuf[ibuf[idx+1]]
		local p3 = vbuf[ibuf[idx+2]]
		local c = dcol
		if face == 7 or face == 8 then
			c = lcol
		end
		
		p01_trifill(p1.x, p1.y,
			p2.x, p2.y,
			p3.x, p3.y,
			c)
		idx = idx + 3
	end
end

-- bootstrap
function build_course(idx)
	road.idx = idx
	
	-- find the map bounds
	local mx=0
	local my=idx*8
	
	-- walk til idx 120
	local breakout=false
	course = {}
	for x=mx,127 do
		local row={}
		
		for y=my,my+7 do
			-- get tile idx
			local block={blank=false}
			local tile = mget(x,y)
			if tile == 120 then
				breakout=true
				road.finish = x*16.0-16.0
				break
			elseif tile < 64 or tile > 111 then
				block.blank=true
			else
				-- create map block
				block.pos={}
				block.sz={x=16.0,y=0.0,z=16.0}
				
				-- determine xz by map pos
				block.pos.x = (y%8)*16.0-64.0
				block.pos.y = 0
				block.pos.z = x*16.0-16.0
				
				-- read sprite for y
				local sx=(tile%16)*8
				local sy=flr(tile/16)*8
				local ymask=0
				ymask=bor(ymask,
					shl(sget(sx+5,sy+5)!=0 and 1 or 0,0))
				ymask=bor(ymask,
					shl(sget(sx+5,sy+4)!=0 and 1 or 0,1))
				ymask=bor(ymask,
					shl(sget(sx+5,sy+3)!=0 and 1 or 0,2))
				ymask=bor(ymask,
					shl(sget(sx+5,sy+2)!=0 and 1 or 0,3))
				block.ymask = ymask
				
				for yl=0,3 do
					local bit = 3-yl
					if band(ymask, shl(1,bit)) > 0 then
						if block.pos.y == 0 then
							block.pos.y=(yl+1)*8.0
						end
						
						block.sz.y=block.sz.y+8.0
					end
				end
				
				-- read sprite colors
				block.lcol = sget(sx,sy)
				block.dcol = sget(sx+7,sy+7)
			end
			add(row, block)
		end
		
		if breakout then
			break
		end
		
		add(course, row)
	end
end

function _init()
	for i=1,star_c do
		stars[i] = {
			x=0, y=0, t=0, d=1
		}
	end
	
	build_course(0)
end

-- update hook
function get_block_idx(pos)
	local rowi=flr((pos.z+16.0)/16.0)+1
	local blocki=min(flr((pos.x+64.0)/16.0)+1,8)
	return rowi, blocki
end

dummy_blank={blank=true}
function get_block(pos)
	local rowi,blocki=get_block_idx(pos)
	if rowi<1 or rowi>#course then
		return dummy_blank
	elseif blocki<1 or blocki>8 then
		return dummy_blank
	else
		return course[rowi][blocki]
	end
end

function pt_in_block(pt, box_pos, box_sz)
	local aabb_min=vec3(box_pos.x, box_pos.y, box_pos.z)
	local aabb_max=vec3(box_pos.x + box_sz.x,
		box_pos.y + box_sz.y,
		box_pos.z + box_sz.z)
	return (pt.x >= aabb_min.x and
		pt.x <= aabb_max.x and
		pt.y >= aabb_min.y and
		pt.y <= aabb_max.y and
		pt.z >= aabb_min.z and
		pt.z <= aabb_max.z)
end

function detect_sensors()
	-- find block in course
	local p=vec3(ship.x,ship.y,ship.z)
	local srowi, sblocki = get_block_idx(p)
	local rowi, blocki
	local block
	local nearest,highest
	
	-- bottom
	nearest=256
	highest=256
	ship.sensor_b = 0
	p.y = ship.y + ship.aabb_max.y + 0.125
	
	-- bottom, front left
	p.x = ship.x + ship.aabb_min.x
	p.z = ship.z + ship.aabb_max.z
	block=get_block(p)
	if not block.blank then
		nearest=min(block.pos.y-p.y,nearest)
		highest=min(block.pos.y,highest)
		ship.sensor_b = bor(ship.sensor_b,
			shl(pt_in_block(p,block.pos,block.sz) and 1 or 0,
				0))
	end
	
	-- bottom, front right
	p.x = ship.x + ship.aabb_max.x
	p.z = ship.z + ship.aabb_max.z
	block=get_block(p)
	if not block.blank then
		nearest=min(block.pos.y-p.y,nearest)
		highest=min(block.pos.y,highest)
		ship.sensor_b = bor(ship.sensor_b,
			shl(pt_in_block(p,block.pos,block.sz) and 1 or 0,
				1))
	end
	
	-- bottom, back right
	p.x = ship.x + ship.aabb_max.x
	p.z = ship.z + ship.aabb_min.z
	block=get_block(p)
	if not block.blank then
		nearest=min(block.pos.y-p.y,nearest)
		highest=min(block.pos.y,highest)
		ship.sensor_b = bor(ship.sensor_b,
			shl(pt_in_block(p,block.pos,block.sz) and 1 or 0,
				2))
	end
	
	-- bottom, back left
	p.x = ship.x + ship.aabb_min.x
	p.z = ship.z + ship.aabb_min.z
	block=get_block(p)
	if not block.blank then
		nearest=min(block.pos.y-p.y,nearest)
		highest=min(block.pos.y,highest)
		ship.sensor_b = bor(ship.sensor_b,
			shl(pt_in_block(p,block.pos,block.sz) and 1 or 0,
				3))
	end
	
	-- detect ground
	ship.floor=highest
	if ship.sensor_b > 0 and
			ship.vy > 0 then
		if ship.y > highest then
			ship.y = highest
		end
	end
	
	-- left
	nearest=-256
	ship.sensor_l = 0
	p.x = ship.x + ship.aabb_min.x

	-- left, top front
	p.y = ship.y + ship.aabb_min.y
	p.z = ship.z + ship.aabb_max.z - 1
	block=get_block(p)
	if not block.blank then
		nearest=max((block.pos.x+block.sz.x)-p.x,nearest)
		ship.sensor_l = bor(ship.sensor_l,
			shl(pt_in_block(p,block.pos,block.sz) and 1 or 0,
				0))
	end
			
	-- left, bot fromt
	p.y = ship.y + ship.aabb_max.y - 1
	p.z = ship.z + ship.aabb_max.z - 1
	block=get_block(p)
	if not block.blank then
		nearest=max((block.pos.x+block.sz.x)-p.x,nearest)
		ship.sensor_l = bor(ship.sensor_l,
			shl(pt_in_block(p,block.pos,block.sz) and 1 or 0,
				1))
	end
	
	-- left, bot back
	p.y = ship.y + ship.aabb_max.y - 1
	p.z = ship.z + ship.aabb_min.z
	block=get_block(p)
	if not block.blank then
		nearest=max((block.pos.x+block.sz.x)-p.x,nearest)
		ship.sensor_l = bor(ship.sensor_l,
			shl(pt_in_block(p,block.pos,block.sz) and 1 or 0,
				2))
	end
			
	-- left, top back
	p.y = ship.y + ship.aabb_min.y
	p.z = ship.z + ship.aabb_min.z
	block=get_block(p)
	if not block.blank then
		nearest=max((block.pos.x+block.sz.x)-p.x,nearest)
		ship.sensor_l = bor(ship.sensor_l,
			shl(pt_in_block(p,block.pos,block.sz) and 1 or 0,
				3))
	end
	
	if ship.sensor_l > 0 and
			ship.vx < 0 then
		ship.x = ship.x + max(nearest,0)
	end
	
	-- right
	nearest=256
	ship.sensor_r = 0
	p.x = ship.x + ship.aabb_max.x

	-- right, top front
	p.y = ship.y + ship.aabb_min.y
	p.z = ship.z + ship.aabb_max.z - 1
	block=get_block(p)
	if not block.blank then
		nearest=min(block.pos.x-p.x,nearest)
		ship.sensor_r = bor(ship.sensor_r,
			shl(pt_in_block(p,block.pos,block.sz) and 1 or 0,
				0))
	end
			
	-- right, bot fromt
	p.y = ship.y + ship.aabb_max.y - 1
	p.z = ship.z + ship.aabb_max.z - 1
	block=get_block(p)
	if not block.blank then
		nearest=min(block.pos.x-p.x,nearest)
		ship.sensor_r = bor(ship.sensor_r,
			shl(pt_in_block(p,block.pos,block.sz) and 1 or 0,
				1))
	end
	
	-- right, bot back
	p.y = ship.y + ship.aabb_max.y - 1
	p.z = ship.z + ship.aabb_min.z
	block=get_block(p)
	if not block.blank then
		nearest=min(block.pos.x-p.x,nearest)
		ship.sensor_r = bor(ship.sensor_r,
			shl(pt_in_block(p,block.pos,block.sz) and 1 or 0,
				2))
	end
			
	-- right, top back
	p.y = ship.y + ship.aabb_min.y
	p.z = ship.z + ship.aabb_min.z
	block=get_block(p)
	if not block.blank then
		nearest=min(block.pos.x-p.x,nearest)
		ship.sensor_rl = bor(ship.sensor_r,
			shl(pt_in_block(p,block.pos,block.sz) and 1 or 0,
				3))
	end
	
	if ship.sensor_r > 0 and
			ship.vx > 0 then
		ship.x = ship.x + max(nearest,0)
	end
	
	-- front
	nearest=256
	ship.sensor_f = 0
	p.z = ship.z + ship.aabb_max.z

	-- front, top left
	p.x = ship.x + ship.aabb_min.x
	p.y = ship.y + ship.aabb_min.y
	block=get_block(p)
	if not block.blank then
		nearest=min(block.pos.z-p.z,nearest)
		ship.sensor_f = bor(ship.sensor_f,
			shl(pt_in_block(p,block.pos,block.sz) and 1 or 0,
				0))
	end
			
	-- front, top right
	p.x = ship.x + ship.aabb_max.x
	p.y = ship.y + ship.aabb_min.y
	block=get_block(p)
	if not block.blank then
		nearest=min(block.pos.z-p.z,nearest)
		ship.sensor_f = bor(ship.sensor_f,
			shl(pt_in_block(p,block.pos,block.sz) and 1 or 0,
				1))
	end
	
	-- front, bot right
	p.x = ship.x + ship.aabb_max.x
	p.y = ship.y + ship.aabb_max.y - 1
	block=get_block(p)
	if not block.blank then
		nearest=min(block.pos.z-p.z,nearest)
		ship.sensor_f = bor(ship.sensor_f,
			shl(pt_in_block(p,block.pos,block.sz) and 1 or 0,
				2))
	end
			
	-- front, bot left
	p.x = ship.x + ship.aabb_min.x
	p.y = ship.y + ship.aabb_max.y - 1
	block=get_block(p)
	if not block.blank then
		nearest=min(block.pos.z-p.z,nearest)
		ship.sensor_f = bor(ship.sensor_f,
			shl(pt_in_block(p,block.pos,block.sz) and 1 or 0,
				3))
	end
	
	if ship.sensor_f > 0 and
			ship.vz > 0 then
		ship.z = ship.z + min(nearest,0)
	end
end

function update_ship()
	-- handle x motion
	if ship.onground then
		if btn(0) then
			ship.vx = -0.5
		elseif btn(1) then
			ship.vx = 0.5
		else
			ship.vx = 0.0
		end
	end
	
	if ship.sensor_l > 0 and ship.vx < 0 then
		ship.vx = 0
	elseif ship.sensor_r > 0 and ship.vx > 0 then
		ship.vx = 0
	end
	
	-- handle z motion
	if btn(3) then
		ship.vz = step(ship.vz, -2.0, 2.0/256.0)
	elseif btn(2) then
		ship.vz = step(ship.vz, 2.0, 4.0/256.0)
	end
	
 -- handle jump
 if ship.onground == false then
	 if ship.jhtimer > 0 then
	 	if btn(4) then
	 		ship.jhtimer = ship.jhtimer - 1
	 	else
	 		ship.jhtimer = 0
	 	end
	 else
	 	ship.vy = ship.vy + road.grav
	 end
	else
		if btnp(4) then
			ship.jhtimer = 8
			ship.onground = false
	 	ship.vy = -2.0
	 	sfx(0)
	 end
	end
 
	-- update fire palette
	if ship.ftimer < 12 then
		ship.ftimer = ship.ftimer + 1
	else
		ship.ftimer = 0
	end
	
	-- update position
	ship.x = ship.x + ship.vx
	ship.y = ship.y + ship.vy
	ship.z = ship.z + ship.vz
	ship.x = max(-64, min(ship.x, 64))
	
	-- update cam
	cam.z = ship.z - 0.0
	
	-- handle collision
	detect_sensors()
	if ship.sensor_f > 0 and
			ship.vz > 0 then
		
		if ship.vz > 0.5 then
			sfx(1)
		end
		
		ship.vz = 0
		-- todo: explode
	end
	
	-- handle hitting ground	
	if ship.sensor_b > 0 then
		if ship.vy > 0 then
			ship.onground = true
			sfx(1)
			-- bounce if fast fall
			if ship.vy >= 1.0 then
				ship.vy = -1.0
				ship.vx = ship.vx * 0.25
				ship.onground = false
			else
				ship.vy = 0.0
			end
		end
	else
		ship.onground = false
	end
end

function update_stars()
	-- update live stars
	for i,v in ipairs(stars) do
		v.t = step(v.t, 0, 1)
	end
	
	-- spawn new stars
	if star_t < star_f then
		star_t = star_t + star_f
	else
		star_t = 0
		
		for i,v in ipairs(stars) do
			if v.t == 0 then
				v.d = rnd(29) + 31
				v.t = v.d
				v.x = rnd(128)
				v.y = rnd(128)
				break
			end
		end
	end
end

function _update60()
	update_stars()
	update_ship()
end

-- draw hook
star_col={1,12,7,10}
function draw_stars()
	for i,v in ipairs(stars) do
		if v.t > 0 then
			local c = min(3, flr(4 * v.t / v.d)) + 1
			c = star_col[c]
			pset(v.x, v.y, c)
		end
	end
end

function draw_bg()
	cls()
	draw_stars()
end

patt_timer = 0
patts = {
	0xffff.8, 0xfbff.8, 0xb5bf.8, 0x5e5b.8,
	0xefe5.8, 0xfffe.8
}
patt_i = 1

function draw_finish()
	if road.finish <= cam.z + fov then
		local z = road.finish
		local tl = vec3(-64, -32, z)
		local br = vec3(64, 32, z)
		tl = project3(tl)
		br = project3(br)
		
		fillp(patts[patt_i])
	 color(12)
	 rectfill(tl.x, tl.y, br.x, br.y)
		fillp()
		
		patt_timer = patt_timer + 1
		if patt_timer >= 4 then
			patt_i = patt_i + 1
			if patt_i > #patts then
				patt_i = 1
			end
			
			patt_timer = patt_timer - 4
		end
	end
end

dorder={1,8,2,7,3,6,4,5}
function draw_fg()
	draw_finish()
	
	local shipflag=false
	for rowi=#course,1,-1 do
		local row=course[rowi]
		local rowz=(rowi-1)*16.0-16.0
		
		-- cull based on z
		if rowz <= cam.z + fov and
			rowz + 64 >= cam.z + 1 then
			
			for blocki=1,#row do
				local block=row[dorder[blocki]]
				if not block.blank then
					draw_box(block.pos,
						block.sz,
						block.lcol, block.dcol)
				end
			end
		end
		
		if rowz <= cam.z-4 and shipflag == false then
			draw_ship()
			shipflag=true
		end
	end
end

function draw_ship()
	palt(0, false)
	palt(14, true)
	
	-- project world pos
	local wpos = vec3(ship.x,
		ship.y, ship.z)
	local shwpos = vec3(ship.x,
		ship.floor, ship.z)
	local spos = project3(wpos)
	local shspos = project3(shwpos)
	
	-- draw shadow
	if spos.y < shspos.y then
		local ssz = abs(ship.y - ship.floor)
		ssz = min(flr(ssz / 16), 2)
		ssz = ssz * 2
		spr(ssz,
			shspos.x - 8,
			shspos.y - 8 - 1,
			2, 2)
	end
	
	-- draw ship
	local fcolor = ship.ftimer / 4
	fcolor = fcolor + 8
	local spitch = 0
	if ship.vy < -0.75 then
		spitch = 2
	elseif ship.vy > 0.75 then
		spitch = 4
	end 
	pal(8, fcolor)
	spr(8 + spitch,
		spos.x - 8,
		spos.y - 8 - 1,
		2, 2)
		
	-- cleanup
	pal(8, 8)
	palt(0, true)
	palt(14, false)
end

function _draw()
	draw_bg()
	draw_fg()
end
__gfx__
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee161eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee161eeeeeeeeeeee51116eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee76661ddd6eeeeeeed76d7d556eeeeeee1de666ed1eeeeeeeeeeeeeeeeeeee
eeee0000000eeeeeeeee0000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed166777d667eeeeed566d6d5576eeeeedd1d656d5d6eeeeeeeeeeeeeeeeeee
eee000000000eeeeeeee0000000eeeeeeeeee00000eeeeeeeeeeee000eeeeeeee5885d6d6dd887eee5555d666dd6ddeee588dd1d5dd88deeeeeeeeeeeeeeeeee
ee00000000000eeeeee000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee588d11dd1d88deee588d11611d88deee5dd11d6d11dddeeeeeeeeeeeeeeeeee
ee00ee000ee00eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed5edd6ddeddeeee588516161188deeeee11115d111eeeeeeeeeeeeeeeeeeee
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeddeeeeeeeddeeeeeeeee151eeeeeeeeeeeeeeeeeeeeeee
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777776777777767777777677777776ddddddd5ddddddd5ddddddd5ddddddd577777776777777767777777677777776ddddddd5ddddddd5ddddddd5ddddddd5
77770006777700067777000677770006dddd0005dddd0005dddd0005dddd000577770006777700067777000677770006dddd0005dddd0005dddd0005dddd0005
77770006777700067777000677770706dddd0005dddd0005dddd0005dddd070577770006777700067777000677770706dddd0005dddd0005dddd0005dddd0705
77770006777700067777070677770706dddd0005dddd0005dddd0705dddd070577770006777700067777070677770006dddd0005dddd0005dddd0705dddd0005
77770006777707067777070677770706dddd0005dddd0705dddd0705dddd070577770006777707067777000677770006dddd0005dddd0705dddd0005dddd0005
77770706777707067777070677770706dddd0705dddd0705dddd0705dddd070577770706777700067777000677770006dddd0705dddd0005dddd0005dddd0005
77770006777700067777000677770006dddd0005dddd0005dddd0005dddd000577770006777700067777000677770006dddd0005dddd0005dddd0005dddd0005
66666666666666666666666666666666555555555555555555555555555555556666666666666666666666666666666655555555555555555555555555555555
ccccccc1ccccccc1ccccccc1ccccccc199999994999999949999999499999994ccccccc1ccccccc1ccccccc1ccccccc199999994999999949999999499999994
cccc0001cccc0001cccc0001cccc000199990004999900049999000499990004cccc0001cccc0001cccc0001cccc000199990004999900049999000499990004
cccc0001cccc0001cccc0001cccc070199990004999900049999000499990704cccc0001cccc0001cccc0001cccc070199990004999900049999000499990704
cccc0001cccc0001cccc0701cccc070199990004999900049999070499990704cccc0001cccc0001cccc0701cccc000199990004999900049999070499990004
cccc0001cccc0701cccc0701cccc070199990004999907049999070499990704cccc0001cccc0701cccc0001cccc000199990004999907049999000499990004
cccc0701cccc0701cccc0701cccc070199990704999907049999070499990704cccc0701cccc0001cccc0001cccc000199990704999900049999000499990004
cccc0001cccc0001cccc0001cccc000199990004999900049999000499990004cccc0001cccc0001cccc0001cccc000199990004999900049999000499990004
11111111111111111111111111111111444444444444444444444444444444441111111111111111111111111111111144444444444444444444444444444444
bbbbbbb3bbbbbbb3bbbbbbb3bbbbbbb388888882888888828888888288888882bbbbbbb3bbbbbbb3bbbbbbb3bbbbbbb388888882888888828888888288888882
bbbb0003bbbb0003bbbb0003bbbb000388880002888800028888000288880002bbbb0003bbbb0003bbbb0003bbbb000388880002888800028888000288880002
bbbb0003bbbb0003bbbb0003bbbb070388880002888800028888000288880702bbbb0003bbbb0003bbbb0003bbbb070388880002888800028888000288880702
bbbb0003bbbb0003bbbb0703bbbb070388880002888800028888070288880702bbbb0003bbbb0003bbbb0703bbbb000388880002888800028888070288880002
bbbb0003bbbb0703bbbb0703bbbb070388880002888807028888070288880702bbbb0003bbbb0703bbbb0003bbbb000388880002888807028888000288880002
bbbb0703bbbb0703bbbb0703bbbb070388880702888807028888070288880702bbbb0703bbbb0003bbbb0003bbbb000388880702888800028888000288880002
bbbb0003bbbb0003bbbb0003bbbb000388880002888800028888000288880002bbbb0003bbbb0003bbbb0003bbbb000388880002888800028888000288880002
33333333333333333333333333333333222222222222222222222222222222223333333333333333333333333333333322222222222222222222222222222222
00000000000000000000000000000000000000000000000000000000000000000008800000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000008800000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000008800000000000000000000000000000000000000000000000000000000000
aaaaaaaa000000000000000000000000000000000000000000000000000000000008800000000000000000000000000000000000000000000000000000000000
aaaaaaaa000000000000000000000000000000000000000000000000000000000008800000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000008800000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000008800000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000008800000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000078000000000000000000000000000000000000000000000000000000000000000000000000000000007800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000078000000000000000000000000000000000000000000000000000000000000000000000000000000007800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000040404141414100000000000000004a4a4a4a784b00004b4b00004b4b00004a4a4a4a000000000000000000000000000000000000000000000000007800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040400000545440406060606041410000000078000000000000000000000042424242424266000049490000484800004848484800000000000000007800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040400000545440406060606041410000000078000000000000000000000042424242424266000049490000484800004848484800004848404040407800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000040404141414100000000000000004a4a4a4a78004040000040400000404041414141000000000000000000000000000000000000000000000000007800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000078000000000000000000000000000000000000000000000000000000000000000000000000000000007800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070
__sfx__
000100000c6500c6500c6500d6500e6500e6500e6500f65010650116501165013650146501275012750137501475014750167501675018750197501a7501c7501d7501f75020750207502675021750187500b750
000100001c150191501615013150111500d1500b15008150041500015000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
